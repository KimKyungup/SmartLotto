<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="stylesheet" href="stylesheets/style.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  <title>LoFun</title>
</head>

<body>

  <%- include topbar.ejs %>

  <main role="main">
    <section class="jumbotron text-center">
      <div class="container">
        <h3>Smart contract platform to raise/join Fund.</h3>
        <p class="lead text-muted">
          You can participate by sending ethereums to the smart contract address.<br>
          <b>â€»Don't use exchange wallet.</b><br>
          Your receive/send addresses should be same.
        </p>
        <p>
          [Recommended Ethereum Wallet List]<br>          
          <a href="https://metamask.io/">Metamask</a> : Firefox and Chrome extensions<br>
          <a href="https://github.com/ethereum/mist/releases">Mist</a> : presented by ethereum.org<br>
          <a href="https://www.myetherwallet.com/">MyEtherWallet</a> : Web Wallet
        </p>
      </div>
    </section>

    <div class="container">
      <h3 class="text-center"><b>Smart Contract List</b></h3>
      <div class="row py-3">
        <div class="col-md-6 box-shadow">
          <p>
          <h6><b>[Simple Smart Lotto]</b></h6>
            <div>This will pick a winner every 100 participant.</div>
            <div>You can participate by sending 0.01 ETH to the address.</div>
            <div>Winner can take 0.99 ETH.</div>          
          </p>
          <p>
            <h6><b>Address</b></h6>
              <a href="https://rinkeby.etherscan.io/address/0x6FF25B3186371Ade81311260d237396CE7900aeD" target="about:blank">
                <p id="c1">0x6FF25B3186371Ade81311260d237396CE7900aeD</p>
              </a>                        
              <button type="button" class="btn btn-outline-info btn-sm" onclick="copy_to_clipboard('#c1')">copy address</button>
          </p>
          <button name="participateBtn" class="btn btn-primary" type="button" onclick="send('0x6FF25B3186371Ade81311260d237396CE7900aeD',0.01)">Send 0.01 ETH by Metamask
          </button>         
          <p>
            <h6><b>Participant List</b></h6>
          </p>
          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col">Time</th>
                <th scope="col">Address</th>                  
              </tr>
            </thead>
            <tbody>
              <tr>
                <th scope="row">5min ago</th>                  
                <td>0x5bfff73baa916bfd05dc3cbd7a9254e092165258</td>                  
              </tr>
              <tr>
                <th scope="row">7min ago</th>                  
                <td>0x15697964ce7216fc8845001be0f9077e5eb2a267</td>
              </tr>
              <tr>
                <th scope="row">10
                min ago</th>                  
                <td>0x6f357f0353e12b933e6caa46dd8cfd5b3713bb62</td>
              </tr>
            </tbody>
          </table>                        

          <h6><b>Winners</b></h6>

          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col">#</th>
                <th scope="col">Address</th>                  
                <th scope="col">Prize</th>                  
              </tr>
            </thead>
            <tbody>
              <tr>
                <th scope="row">3</th>                  
                <td>0x15697964ce7216fc8845001be0f9077e5eb2a267</td>                  
                <td>0.99 ETH</td>
              </tr>
              <tr>
                <th scope="row">2</th>                  
                <td>0x6f357f0353e12b933e6caa46dd8cfd5b3713bb62</td>
                <td>0.99 ETH</td>
              </tr>
              <tr>
                <th scope="row">1</th>                  
                <td>0x85f37d9cd74e39a0aa220e0104410c5f4c611d1a</td>
                <td>0.99 ETH</td>
              </tr>
            </tbody>
          </table>  
        </div>

        <div class="col-md-6  box-shadow">
          <p>TBD</p>
          <!--
          <h6><b>[Fund]</b>:For TEAM R</h6>
          <button type="button" class="btn btn-outline-info btn-sm" onclick="copy_to_clipboard('#c1')">copy address</button>
          <h7>Address
          <a href="https://rinkeby.etherscan.io/address/0x15697964Ce7216fC8845001Be0f9077E5Eb2A267" target="about:blank">
            <p id="c2">0x15697964Ce7216fC8845001Be0f9077E5Eb2A267</p>
          </a>

          <div class="input-group mb-3">            
            <input type="text" name="amt" class="form-control">            
            <div class="input-group-append">
              <span class="input-group-text">ETH</span>
            </div>
          </div>

          <button name="FundingBtn" class="btn btn-primary" type="button">Send by Metamask
          </button>
          <script>
            $(document).ready(function(){
              var addr = $('#c2');
              var amount = $('#amt');
              var btn = $('#FundingBtn');              
              btn.click(function(){
                send(addr,amount)
              });                            
            })
          </script>
          </h7>
          -->
        </div>
      </div>

      <script>
        function copy_to_clipboard(element) {
          var $temp = $("<input>");
          $("body").append($temp);
          $temp.val($(element).text()).select();
          document.execCommand("copy");
          $temp.remove();
        }
      </script>
      <!-- ############################################################################################# -->
      <div class="py-5">
        <p class="lead text-muted">
          <h6>Test Script</h6>
          <h7>Server Node Eth Account: <%= account1 %></h7>
          <h7>Client Node Status: <div id="clientStatus" style='display:inline;''></div></h7>
          <div id="clientAccount"></div>            
          <h6>Web3 Version</h6>
          <div id="Result_getWe3Version"></div>
        </p>
      </div>          


      <%- participantList %>           

      <div id="ParticipantList"></div>

      <%- winnerList %>

                <div class="input-group mb-3">            
            <input type="text" name="amt" class="form-control">            
            <div class="input-group-append">
              <span class="input-group-text">ETH</span>
            </div>
          </div>

          <button name="FundingBtn" class="btn btn-primary" type="button">Send by Metamask
          </button>
          <script>
            $(document).ready(function(){
              var addr = $('#c2');
              var amount = $('#amt');
              var btn = $('#FundingBtn');              
              btn.click(function(){
                send(addr,amount)
              });                            
            })
          </script>
          </h7>
    </div>
  </main>
  <%- include footer.ejs %>
  <!-- JavaScript -->
  <script type="text/javascript">
    var account = "";

    window.addEventListener('load', function() {
                // Checking if Web3 has been injected by the browser (Mist/MetaMask)
                if (typeof web3 !== 'undefined') {

                    // Use the browser's ethereum provider
                    var provider = web3.currentProvider
                    console.log('Web3 is defined.');

                    // version
                    var version = web3.version.api;
                    console.log('Version is' + version);
                    //document.getElementById('Result_getWeb3Version').innerText = 'version : ' + version;


                    document.getElementById('clientStatus').innerText = 'Web3 is detected.';

                    //account = web3.eth.accounts[0];
                    var accountInterval = setInterval(function() {
                      if (web3.eth.accounts[0] !== account) {
                        account = web3.eth.accounts[0];
                        updateAccount();
                        console.log('Account is changed to ' + account);
                      }
                    }, 100);

                    var contractInterval = setInterval(function() {
                      updateContract();
                    }, 1000);

                  } else {
                    console.log('No web3? You should consider trying MetaMask!')
                    document.getElementById('clientStatus').innerText = 'No Web3 Service. Please check your MetaMask!';
                    $('participateBtn').attr('disabled', 'disabled');
                  }
                })
    document.getElementById('clientAccount').innerText = '';

    function updateAccount() {
      document.getElementById('clientAccount').innerText = 'Client Node Eth Account:' + account;
    }

            // Contract
            var contractAddress = '0x6FF25B3186371Ade81311260d237396CE7900aeD';
            var abi = '[ { "constant": true, "inputs": [ { "name": "", "type": "uint256" } ], "name": "winners", "outputs": [ { "name": "", "type": "address", "value": "0x85f37d9cd74e39a0aa220e0104410c5f4c611d1a" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "", "type": "uint256" } ], "name": "recvEther", "outputs": [ { "name": "", "type": "uint256", "value": "100000000000000000" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "", "type": "uint256" } ], "name": "prizes", "outputs": [ { "name": "", "type": "uint256", "value": "1120000000000000000" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "prize", "outputs": [ { "name": "", "type": "uint256", "value": "600000000000000000" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "owner", "outputs": [ { "name": "", "type": "address", "value": "0x15697964ce7216fc8845001be0f9077e5eb2a267" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "", "type": "uint256" } ], "name": "sender", "outputs": [ { "name": "", "type": "address", "value": "0x85f37d9cd74e39a0aa220e0104410c5f4c611d1a" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "totalEther", "outputs": [ { "name": "", "type": "uint256", "value": "2660000000000000000" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getRecvEther", "outputs": [ { "name": "", "type": "uint256[]", "value": [ "100000000000000000", "1000000000000000000", "100000000000000000", "100000000000000000", "100000000000000000", "100000000000000000", "100000000000000000", "100000000000000000", "110000000000000000", "100000000000000000", "100000000000000000", "110000000000000000", "120000000000000000", "120000000000000000", "300000000000000000" ] } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getPrizes", "outputs": [ { "name": "", "type": "uint256[]", "value": [ "1120000000000000000", "408000000000000000", "600000000000000000" ] } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getLastSender", "outputs": [ { "name": "", "type": "address[]", "value": [ "0x85f37d9cd74e39a0aa220e0104410c5f4c611d1a", "0x15697964ce7216fc8845001be0f9077e5eb2a267", "0x72ce752aa8cebd73743d48f04be7fe8427d42ce3", "0x72ce752aa8cebd73743d48f04be7fe8427d42ce3", "0x72ce752aa8cebd73743d48f04be7fe8427d42ce3", "0x6f357f0353e12b933e6caa46dd8cfd5b3713bb62", "0x85f37d9cd74e39a0aa220e0104410c5f4c611d1a", "0x72ce752aa8cebd73743d48f04be7fe8427d42ce3", "0x15697964ce7216fc8845001be0f9077e5eb2a267", "0x6f357f0353e12b933e6caa46dd8cfd5b3713bb62", "0x85f37d9cd74e39a0aa220e0104410c5f4c611d1a", "0x6f357f0353e12b933e6caa46dd8cfd5b3713bb62", "0x72ce752aa8cebd73743d48f04be7fe8427d42ce3", "0x15697964ce7216fc8845001be0f9077e5eb2a267", "0x6f357f0353e12b933e6caa46dd8cfd5b3713bb62" ] } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getBlockTimeStamp", "outputs": [ { "name": "", "type": "uint256[]", "value": [ "1519490061", "1519490061", "1519490331", "1519490421", "1519490496", "1519490571", "1519490841", "1519491111", "1519491171", "1519491261", "1519491696", "1519491741", "1519491786", "1519491831", "1519491951" ] } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "n", "outputs": [ { "name": "", "type": "uint256", "value": "15" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "N", "outputs": [ { "name": "", "type": "uint256", "value": "5" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getWinners", "outputs": [ { "name": "", "type": "address[]", "value": [ "0x85f37d9cd74e39a0aa220e0104410c5f4c611d1a", "0x6f357f0353e12b933e6caa46dd8cfd5b3713bb62", "0x15697964ce7216fc8845001be0f9077e5eb2a267" ] } ], "payable": false, "stateMutability": "view", "type": "function" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "turn", "type": "uint256" }, { "indexed": false, "name": "winner", "type": "address" }, { "indexed": false, "name": "prize", "type": "uint256" }, { "indexed": false, "name": "fee", "type": "uint256" } ], "name": "Result", "type": "event" }, { "constant": false, "inputs": [], "name": "close", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "payable": true, "stateMutability": "payable", "type": "fallback" } ]';


            function updateContract() {
              var contract = web3.eth.contract(JSON.parse(abi)).at(contractAddress);
              var ParticipantList = contract.getLastSender(function(error, result) {
                if (!error) {
                  console.log(result.length);
                  var out = "";
                  for (var i = result.length - 1; i > result.length - 6; i--) {
                    out = out + "<br>" + result[i];
                  }
                  document.getElementById('ParticipantList').innerHTML = out;
                } else
                console.log(error);
              });
            }

            // Button
            function send(addr, amount) {
              if (typeof web3 == 'undefined') {
                alert("can't find Metamask.");
                return;
              }

              if (typeof account == 'undefined') {
                alert("Please, unlock Metamask and then retry.")
                return
              }
              var sender = account;
                var receiver = addr; //'0x5bFFF73baa916BFd05dC3cbd7a9254e092165258';
                var amount = web3.toWei(amount, "ether");

                web3.eth.sendTransaction({ from: sender, to: receiver, value: amount }, callBack);
              }

              function callBack(error, result) {
                if (!error)
                  console.log(JSON.stringify(result));
                else
                  console.error(error);
              }
            </script>
            <!-- Optional JavaScript -->
            <!-- jQuery first, then Popper.js, then Bootstrap JS -->
            <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
            <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
          </body>

          </html>